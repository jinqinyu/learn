token: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

git init  #初始化一个本地仓库
git add 文件  #提交到暂存区
git commit -m "备注"  #提交到本地仓库
git status  #查看仓库状态
git diff （文件） #查看（文件）修改的地方

git log  #查看仓库日志
git log --pretty=oneline
git reflog  #相当于history  查看每一次的命令
git reset --hard HEAD^  #内容回退到上一个commitID的版本
git reset --hard commitID #回退到commitID版本
git checkout -- 文件  #丢弃工作区的修改回到最近一次的add或commit
git rm 文件  #删除工作区文件

git remote add origin 地址 #关联远程仓库
git remote -v #查看远程库信息
git remote rm origin  #根据名字删除远程库绑定关系
git push -u origin master  #推送并关联分支到远程仓库
git push origin master
git pull  #拉取远程分支的内容（如果又冲入需要先解决冲突）
git clone 地址  #克隆一个远程仓库

git checkout master/dev  #切换分支
git checkout -b dev #创建并切换分支
git branch #查看分支
git merge dev  #合并dev分支到当前分支
git branch -d dev #删除dev分支
git branch dev #创建dev分支 
git branch --set-upstream-to=origin/dev dev  #指定本地dev分支与远程origin/dev分支的链接
git checkout -b branch-name origin/branch-name  #在本地创建和远程分支对应的分支
git fetch 相当于是从远程获取最新版本到本地，不会自动merge
git stash push 将文件给push到一个临时空间中
git stash pop 将文件从临时空间pop下来

git tag 标签  #给最新的commit打标签
git tag 标签 commit ID  #给commitID打标签
git tag #查看标签
git show 标签 #查看标签信息
git tag -a 标签 -m “备注” #指定标签信息
git tag -d 标签 #删除标签
git push origin 标签 #推送标签到远程仓库
git push origin --tags #一次推送全部标签
git push origin :refs/tags/标签 #删除远程标签，需要先删除本地标签
git ls-remoto --tags origin #查看删除远程tsgs执行效果


